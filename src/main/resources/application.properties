spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/wallet_service}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

server.port=8080

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true

# Redis Configuration
spring.data.redis.host=${SPRING_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_REDIS_PORT:6379}
spring.data.redis.password=${SPRING_REDIS_PASSWORD:}
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,circuitbreakers
management.endpoint.health.show-details=always
management.health.redis.enabled=true
management.health.db.enabled=true
management.health.circuitbreakers.enabled=true

# JWT Configuration
wallet.app.jwtSecret=walletServiceSecretKey123456789012345678901234567890
wallet.app.jwtExpirationMs=86400000

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.walletService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.walletService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.walletService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.walletService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.walletService.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.walletService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.walletService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.walletService.eventConsumerBufferSize=10

# Resilience4j Timeout Configuration
resilience4j.timelimiter.instances.walletService.timeoutDuration=3s
resilience4j.timelimiter.instances.walletService.cancelRunningFuture=true

# Resilience4j Retry Configuration
resilience4j.retry.instances.walletService.maxAttempts=3
resilience4j.retry.instances.walletService.waitDuration=1s
resilience4j.retry.instances.walletService.enableExponentialBackoff=true
resilience4j.retry.instances.walletService.exponentialBackoffMultiplier=2
resilience4j.retry.instances.walletService.retryExceptions=org.springframework.web.client.ResourceAccessException,java.util.concurrent.TimeoutException
